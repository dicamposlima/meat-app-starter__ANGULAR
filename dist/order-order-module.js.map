{"version":3,"sources":["webpack:///./src/app/order/delivery-costs/delivery-costs.component.html","webpack:///./src/app/order/delivery-costs/delivery-costs.component.ts","webpack:///./src/app/order/order-items/order-items.component.html","webpack:///./src/app/order/order-items/order-items.component.ts","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/order.model.ts","webpack:///./src/app/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table\\\">\\n    <tbody><tr>\\n      <th style=\\\"width:50%\\\">Itens:</th>\\n      <td class=\\\"text-right\\\">{{itemsValue | currency : 'BRL' : 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Frete:</th>\\n      <td class=\\\"text-right\\\">{{delivery | currency : 'BRL' : 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Total:</th>\\n      <td class=\\\"text-right\\\">{{total() | currency : 'BRL' : 'symbol'}}</td>\\n    </tr>\\n  </tbody></table>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mt-delivery-costs',\n  templateUrl: './delivery-costs.component.html'\n})\nexport class DeliveryCostsComponent implements OnInit {\n\n  @Input() delivery: number\n  @Input() itemsValue: number\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  total(): number {\n    return this.delivery + this.itemsValue\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"items.length <= 0\\\" class=\\\"col-xs-12 table-responsive\\\">\\n  <p>\\n    Não há itens no seu carrinho. Que tal começar por <a [routerLink]=\\\"['/restaurants']\\\">aqui</a>?\\n  </p>\\n</div>\\n<div *ngIf=\\\"items.length > 0\\\" class=\\\"col-xs-12 table-responsive\\\">\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n      <tr>\\n        <th class=\\\"text-center\\\">Quantidade</th>\\n        <th>Item</th>\\n        <th>Descrição</th>\\n        <th class=\\\"text-right\\\">Subtotal</th>\\n        <th class=\\\"text-right\\\"></th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let item of items\\\">\\n        <td class=\\\"text-center\\\">\\n          <a (click)=\\\"emitDecreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n          {{item.quantity}}\\n          <a (click)=\\\"emitIncreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n        </td>\\n        <td>{{item.menuItem.name}}</td>\\n\\n        <td>{{item.menuItem.description}}</td>\\n        <td class=\\\"text-right\\\">{{item.value() | currency: 'BRL' : 'symbol'}}</td>\\n        <td class=\\\"text-right\\\">\\n          <a (click)=\\\"emitRemove(item)\\\" class=\\\"btn btn-sm danger\\\"><i class=\\\"fa fa-remove\\\"></i></a>\\n        </td>\\n      </tr>\\n\\n      </tbody>\\n    </table>\\n  </div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CartItem } from 'app/restaurant-detail/shopping-cart/cart-item.model';\n\n@Component({\n  selector: 'mt-order-items',\n  templateUrl: './order-items.component.html'\n})\nexport class OrderItemsComponent implements OnInit {\n  \n  @Input() items: CartItem[]\n  @Output() increaseQty = new EventEmitter<CartItem>()\n  @Output() decreaseQty =  new EventEmitter<CartItem>()\n  @Output() remove = new EventEmitter<CartItem>()\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emitIncreaseQty(item: CartItem){\n    this.increaseQty.emit(item)\n  }\n\n  emitDecreaseQty(item: CartItem){\n    this.decreaseQty.emit(item)\n  }\n\n  emitRemove(item: CartItem){\n    this.remove.emit(item)\n  }\n\n}\n","module.exports = \"<!--INICIO DO CONTEUDO-->\\n<section class=\\\"content-header\\\">\\n  </section>\\n  \\n  <section class=\\\"content\\\">\\n    <section class=\\\"invoice\\\">\\n          <form [formGroup]=\\\"orderForm\\\"\\n                novalidate>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12\\\">\\n                <h2 class=\\\"page-header\\\">\\n                  <i class=\\\"fa fa-shopping-cart\\\"></i> Finalize o seu pedido\\n                </h2>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12 col-sm-9\\\">\\n                <p class=\\\"lead\\\">Seus dados</p>\\n              </div>\\n              <div class=\\\"col-xs-12 col-sm-3\\\">\\n                  <span class=\\\"help-block pull-right has-error-block\\\"\\n                        *ngIf=\\\"orderForm.hasError('emailsNotMatch')\\\"><i class=\\\"fa fa-remove\\\"></i> E-mails não conferem</span>\\n                </div>\\n              <div class=\\\"col-sm-6 col-xs-12\\\">\\n                  <mt-input-container errorMessage=\\\"Obrigatório e com 5 caracteres\\\"\\n                                      label=\\\"Nome\\\">\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"inputSuccess\\\"\\n                           placeholder=\\\"Nome\\\"\\n                           formControlName=\\\"name\\\"\\n                           autocomplete=\\\"off\\\">\\n                  </mt-input-container>\\n              </div>\\n              <div class=\\\"col-sm-3 col-xs-6\\\">\\n                  <mt-input-container errorMessage=\\\"E-mail inválido\\\"\\n                                      label=\\\"E-mail\\\">\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"inputSuccess\\\"\\n                           placeholder=\\\"E-mail\\\"\\n                           formControlName=\\\"email\\\"\\n                           autocomplete=\\\"off\\\">\\n                  </mt-input-container>\\n                </div>\\n                <div class=\\\"col-sm-3 col-xs-6\\\">\\n                    <mt-input-container errorMessage=\\\"Confirmação de E-mail inválida\\\"\\n                                        label=\\\"Confirmação de E-mail\\\">\\n                      <input type=\\\"text\\\"\\n                             class=\\\"form-control\\\"\\n                             id=\\\"inputSuccess\\\"\\n                             placeholder=\\\"Confirmação de E-mail\\\"\\n                             formControlName=\\\"emailConfirmation\\\"\\n                             autocomplete=\\\"off\\\">\\n                    </mt-input-container>\\n                  </div>\\n            </div>\\n  \\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12\\\">\\n                <p class=\\\"lead\\\">Endereço de Entrega:</p>\\n              </div>\\n              <div class=\\\"col-sm-6 col-xs-12\\\">\\n                  <mt-input-container errorMessage=\\\"Obrigatório e com 5 caracteres\\\"\\n                                      label=\\\"Endereço\\\">\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"inputSuccess\\\"\\n                           placeholder=\\\"Endereço\\\"\\n                           formControlName=\\\"address\\\"\\n                           autocomplete=\\\"off\\\">\\n                  </mt-input-container>\\n              </div>\\n              <div class=\\\"col-sm-3 col-xs-6\\\">\\n                <mt-input-container errorMessage=\\\"Obrigatório e somente números\\\"\\n                                    label=\\\"Número\\\">\\n                  <input type=\\\"text\\\"\\n                         class=\\\"form-control\\\"\\n                         id=\\\"inputSuccess\\\"\\n                         placeholder=\\\"Número\\\"\\n                         formControlName=\\\"number\\\"\\n                         autocomplete=\\\"off\\\">\\n                </mt-input-container>\\n              </div>\\n              <div class=\\\"col-sm-3 col-xs-6\\\">\\n                  <mt-input-container label=\\\"Complemento\\\">\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control\\\"\\n                           id=\\\"inputSuccess\\\"\\n                           placeholder=\\\"Complemento\\\"\\n                           formControlName=\\\"optionalAddress\\\">\\n              </mt-input-container>\\n  \\n              </div>\\n              <!-- /.col -->\\n            </div>\\n            <!-- /.row -->\\n  \\n            <!-- Table row -->\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12\\\">\\n                <p class=\\\"lead\\\">Itens do Pedido:</p>\\n              </div>\\n              <mt-order-items [items]=\\\"cartItems()\\\"\\n                              (increaseQty)=\\\"increaseQty($event)\\\"\\n                              (decreaseQty)=\\\"decreaseQty($event)\\\"\\n                              (remove)=\\\"remove($event)\\\"></mt-order-items>\\n              <!-- /.col -->\\n            </div>\\n            <!-- /.row -->\\n  \\n            <div class=\\\"row\\\">\\n              <!-- accepted payments column -->\\n              <div class=\\\"col-sm-6 col-xs-12\\\">\\n                <p class=\\\"lead\\\">Formas de Pagamento:</p>\\n  \\n                  <div class=\\\"form-group\\\">\\n                     <mt-radio [options]=\\\"paymentOptions\\\"\\n                               formControlName=\\\"paymentOption\\\"></mt-radio>\\n                  </div>\\n  \\n              </div>\\n              <!-- /.col -->\\n              <div class=\\\"col-sm-6 col-xs-12\\\">\\n                <p class=\\\"lead\\\">Frete e Total:</p>\\n                <mt-delivery-costs [delivery]=\\\"delivery\\\"\\n                                   [itemsValue]=\\\"itemsValue()\\\"></mt-delivery-costs>\\n              </div>\\n              <!-- /.col -->\\n            </div>\\n  \\n          </form>\\n  \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button class=\\\"btn btn-success pull-right\\\"\\n                      (click)=\\\"checkOrder(orderForm.value)\\\"\\n                      [disabled]=\\\"!orderForm.valid || cartItems().length === 0\\\"><i class=\\\"fa fa-credit-card\\\"></i> Concluir Pedido\\n              </button>\\n            </div>\\n          </div>\\n  \\n      </section>\\n  </section>\\n  <!-- FIM DO CONTEUDO-->\"","import { Component, OnInit } from '@angular/core';\nimport { RadioOption } from 'app/shared/radio/radio-option.model';\nimport { CartItem } from 'app/restaurant-detail/shopping-cart/cart-item.model';\nimport { OrderService } from './order.service';\nimport { Order, OrderItem } from './order.model';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { tap } from 'rxjs/operators'\n\n@Component({\n  selector: 'mt-order',\n  templateUrl: './order.component.html'\n})\nexport class OrderComponent implements OnInit {\n\n  emailPattern = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i  \n  numberPattern = /^[0-9]*$/\n  orderForm: FormGroup\n  delivery: number = 8\n  orderId: string\n\n  paymentOptions: RadioOption[] =  [\n    {label: 'Dinheiro', value: 'MON'},\n    {label: 'Cartão de Débito', value: 'DEB'},\n    {label: 'Cartão Refeição', value: 'REF'},    \n  ]\n\n  constructor(private orderService: OrderService,\n              private router: Router,\n              private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.orderForm = new FormGroup({\n      name: new FormControl('', {\n        validators: [Validators.required, Validators.minLength(5)]\n      }),\n      email: new FormControl('', {\n        validators: [Validators.required, Validators.pattern(this.emailPattern)]\n      }),\n      emailConfirmation: new FormControl('', {\n        validators: [Validators.required, Validators.pattern(this.emailPattern)]\n      }),\n      address: new FormControl('', {\n        validators: [Validators.required, Validators.minLength(5)]\n      }),\n      number: new FormControl('', {\n        validators: [Validators.required, Validators.pattern(this.numberPattern)]\n      }),\n      optionalAddress: new FormControl(''),\n      paymentOption: new FormControl('', {\n        validators: [Validators.required]\n      })\n    }, {\n      validators: [OrderComponent.equalsTo],\n      updateOn: 'blur'\n    })\n  }\n\n  static equalsTo(group: AbstractControl) : {[key:string]: boolean}{\n    const email = group.get('email')\n    const emailConfirmation = group.get('emailConfirmation')\n    if(!email || !emailConfirmation){\n      return undefined\n    }\n    if(email.value != emailConfirmation.value){\n      return {emailsNotMatch:true}\n    }\n    return undefined\n\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue()\n  }\n\n  cartItems(): CartItem[] {\n    return this.orderService.cartItems()\n  }\n\n  increaseQty(item: CartItem){\n    return this.orderService.increaseQty(item)\n  }\n\n  decreaseQty(item: CartItem){\n    return this.orderService.decreaseQty(item)\n  }\n\n  remove(item: CartItem){\n    return this.orderService.remove(item)\n  }\n\n  isOrderCompleted():boolean {\n    return this.orderId !== undefined\n  }\n\n  checkOrder(order: Order) {\n    order.orderItems = this.cartItems()\n                           .map((item:CartItem) => new OrderItem(item.quantity, item.menuItem.id))\n      this.orderService.checkOrder(order)\n                        .pipe(\n                          tap((orderId:string) => {\n                            this.orderId = orderId\n                          })\n                        )                        \n                        .subscribe((orderId: string) => {\n                          this.router.navigate(['/order-summary'])\n                          this.orderService.clear()\n    })\n  }\n\n}","class Order {\r\n    constructor(\r\n        public address: string,\r\n        public number: number,\r\n        public optionalAddress: string,\r\n        public paymentOption: string,\r\n        public orderItems: OrderItem[] = [],\r\n        public id?: string,\r\n    ){}\r\n}\r\n\r\nclass OrderItem {\r\n    constructor(public quantity: number, public menuId: string){}\r\n}\r\n\r\nexport {Order, OrderItem}","import { NgModule } from \"@angular/core\";\r\nimport { OrderComponent } from \"./order.component\";\r\nimport { OrderItemsComponent } from \"./order-items/order-items.component\";\r\nimport { DeliveryCostsComponent } from \"./delivery-costs/delivery-costs.component\";\r\nimport { SharedModule } from \"app/shared/shared.module\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { LeaveOrderGuard } from \"./leave-order.guard\";\r\n\r\nconst ROUTES: Routes = [\r\n    {\r\n        path: '',\r\n        component: OrderComponent,\r\n        canDeactivate: [LeaveOrderGuard]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        OrderComponent,\r\n        OrderItemsComponent,\r\n        DeliveryCostsComponent\r\n    ],\r\n    imports: [\r\n        SharedModule,\r\n        RouterModule.forChild(ROUTES)\r\n    ]\r\n})\r\n\r\nexport class OrderModule{}"],"sourceRoot":""}